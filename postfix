// Online C++ compiler to run C++ program online
/*#include <iostream>
using namespace std;
char stack[100],top=-1;
bool isFull(){
    return top==99;
}
bool isEmpty(){
    return top==-1;
}
void push(char c){
    if(isFull()){
        cout<<"stack is full"<<endl;
    }
    else{
        stack[++top]=c;
    }
}
char pop(){
    if(isEmpty()){
        cout<<"stack is empty"<<endl;
    }
    else{
        char poped=stack[top--];
        return poped;
    }
}
int prece(char ch){
    switch(ch){
        case '^':
                  return 4;
        case '*':case'/':
                            return 3;
        case '+':case '-':
                            return 2;
            default:
                            return 0;
    }
    }
int main(){
    char symb,infix[100],postfix[100];
    int i,j=0;
    cout<<"enter the string"<<endl;
    cin>>infix;
    for(i=0;infix[i]!='\0';i++){
        symb=infix[i];
        switch(symb){
            case '(':
                        push(symb);
                        break;
            case ')':
                    while(!isEmpty() && stack[top]=='('){
                        postfix[j++]=pop();}
                        if(!isEmpty()){
                            pop();
                            
                        }
                            break;
            case'+':
            case '-':
            case '*':
            case '/':
            case '^':
            while(!isEmpty() && prece(stack[top])>=prece(symb)){
                postfix[j++]=pop();}
                push (symb);
                break;
            default:
                    postfix[j++]=symb;
                    break;
            }}
            while(!isEmpty()){
                postfix[j++]=pop();
            }
                    
            postfix[j]='\0';
            cout<<postfix<<endl;
            return 0;
        }*/
        #include<iostream>
using namespace std;
char stack[100],top=-1;
bool isFull(){
    return top==99;
}
bool isEmpty(){
    return top==-1;
}
void push(char c){
    if(isFull()){
        cout<<"stack is full"<<endl;
    }
    else{
        stack[++top]=c;
    }
}
char pop(){
    if(isEmpty()){
        cout<<"stack is empty"<<endl;
    }
    else{
        char poped=stack[top--];
        return poped;
    }}
int prece(char c){
    switch(c){
        case '^':
                    return 4;
        case '*': case '/':
                    return 3;
        case '+':case '-':
                            return 2;
            default:
                            return 0;
    }
    }
int main(){
    int i,j=0;
    char symb,infix[100],postfix[100];
    cout<<"enter the string";
    cin>>infix;
    for(i=0;infix[i]!='\0';i++){
        symb=infix[i];
            switch(symb){
                case '(':
                            push(symb);
                            break;
                case ')':
                        while(!isEmpty()&& stack[top]!='('){
                            postfix[j++]=pop();
                        }
                        if(!isEmpty()){
                            postfix[j++]=pop();
                        }
                        break;
                case '+':
                case '-':
                case '*':
                case '/':
                case '^':
                while(!isEmpty&& prece(stack[top])>=prece(symb)){
                    postfix[j++]=pop();
                }
                push(symb);
                break;
            default:
                    postfix[j++]=symb;
                    break;
            }
        }
        while(!isEmpty()){
            postfix[j++]=pop();
        }
        postfix[j]='\0';
        cout<<postfix;
    }

    
