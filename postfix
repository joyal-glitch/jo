#include<iostream>
using namespace std;
class Postfix{
    private:
    char stack[100];
    int top=-1;
    bool isFull(){
        return top==99;
    }
    bool isEmpty(){
        return top==-1;
    }
    void push(char c){
    if(isFull()){
        cout<<"stack is full"<<endl;
    }
    else{
        stack[++top]=c;
    }
}
char pop(){
    if(isEmpty()){
        cout<<"stack is empty"<<endl;
    }
    else{
        char poped=stack[top--];
        return poped;
    }
}
int prece(char ch){
    switch(ch){
        case '^':
                  return 4;
        case '*':case'/':
                            return 3;
        case '+':case '-':
                            return 2;
            default:
                            return 0;
    }
    }
    public:
  //  Postfix() : top(-1) {}
    void convert(char infix[100],char postfix[100]){
        int i,j=0;
        char symb;
        for(i=0;infix[i]!='\0';i++){
            symb=infix[i];
            switch(symb){
                case '(':
                push(symb);
                break;
                case ')':
                while(!isEmpty()&& stack[top]!='('){
                    postfix[j++]=pop();
                }
                if(!isEmpty()){
                    postfix[j++]=pop();
                }
                break;
                  case'+':
            case '-':
            case '*':
            case '/':
            case '^':
            while(!isEmpty()&&stack[top]>=prece(symb)){
                postfix[j++]=pop();}
                push(symb);
                break;
                default:
                postfix[j++]=symb;
                break;
            }
            }
            while(!isEmpty()){
                postfix[j++]=pop();
            }
            postfix[j]='\0';
            cout<<"postfix is "<<postfix<<endl;
        }
    };
    int main(){
        char infix[100],postfix[100];
        cout<<"enter the infix"<<endl;
        cin>>infix;
        Postfix p;
        p.convert(infix,postfix);
        return 0;
    }
